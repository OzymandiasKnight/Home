<markdown>
<t>Mes concours de cybersécurité</t>
<p>Je vais énoncer les différents challenges de mes concours de cybersécurité parmis ceux qui m'ont marqué.</p>
<space>
<st>Mon tout premier concours</st>
<space-s>
<p>
En première générale au lycée, j’ai choisi la spécialité NSI (Numérique et Sciences Informatiques).  
C’est à cette occasion que j’ai rencontré un professeur passionné qui a proposé à ma classe, ainsi qu’aux terminales,
de former une équipe afin de participer à un concours de cybersécurité.  
C’est ainsi que j’ai découvert mon tout premier CTF :
</p>
<space-s>
<space-s>
<st>Passe Ton Hack d’Abord 2024</st>
<space-s>
<p>
Ce concours proposait de nombreux challenges,
mais certains m’ont particulièrement marqué et appris de nouvelles compétences, notamment :
</p>
<bp>Utiliser le module socket en Python</bp>
<bp>Manipuler Wireshark pour analyser une trame réseau et y repérer des informations sensibles</bp>
<bp>Exploiter les métadonnées d’un fichier pour localiser un lieu</bp>
<space-s>
<p>Bien que je n’aurais pas pu résoudre tous les challenges seul, j’ai eu la chance de travailler avec une équipe soudée.</p>
<p>
Au-delà de l’esprit de compétition, chacun partageait ses write-ups (solutions expliquées),
ce qui m’a permis de progresser dans de nombreux domaines abordés par le concours.
</p>
<space-s>
<space-s>

<st>Oteria Cyber Cup 2024</st>

<space-s>
<p>
L’Oteria Cyber Cup est un CTF entièrement axé sur l’OSINT (Open Source Intelligence),
une discipline de la cybersécurité qui regroupe plusieurs branches.
Lors de cette édition, nous avons travaillé sur :
</p>
<bp>SOCMINT (Social Media Intelligence) : exploitation des réseaux sociaux</bp>
<bp>WEBINT (Web Intelligence) : analyse de contenus web</bp>
<bp>IMINT (Imagery Intelligence) : identification de lieux ou d’indices à partir d’images</bp>
<bp>CYBINT (Cyber Intelligence) : détection de menaces et recherche de vulnérabilités sur des sites</bp>
<space-s>
<p>
La plupart des équipes étaient composées d’étudiants du supérieur,
mais notre lycée a tout de même réussi à présenter deux équipes.  
Dès le début, nous avons attiré l’attention grâce à un premier flag que j’ai trouvé :
il suffisait d’inspecter le code source d’une page pour y découvrir un mot de passe caché en commentaire.  
Simple, mais efficace : cela nous a propulsés en tête du classement… du moins pour un temps.
</p>
<p>
Les autres épreuves étaient bien plus difficiles.  
Celle qui m’a le plus marqué consistait à reconstituer une image contenant un mot de passe,
mais découpée et mélangée comme un puzzle.
</p>
<p>
L’objectif était d’écrire un programme en Python capable de remettre les morceaux en ordre.  
Pour cela, il fallait analyser chaque pièce à l’aide de la moyenne des couleurs sur les bords,
et comparer avec les autres.
</p>
<p>
Nous devions donc apprendre à utiliser une librairie Python de traitement d’images,
ce à quoi nous n’étions pas préparés.
Cette épreuve a été un vrai défi, mais aussi une excellente expérience.
</p>
<space-s>
<space-s>

<st>Passe Ton Hack d’Abord 2025</st>

<space-s>
<bp>Examen d'entrée au GIC</bp>
<p>
L’un des premiers défis de cette édition était un petit exercice de cryptographie,
servant d’ "examen d’entrée" au Groupe d’Intervention Cyber.
Il s’agissait simplement de décrypter un message codé en ROT13 
(une variante du code César qui décale l’alphabet de 13 lettres au lieu de 3).
Un bon moyen de se mettre en jambes avant les choses sérieuses.
</p>
<bp>Brookie Clicker</bp>
<p>
Un autre challenge marquant reprenait le principe d’un Cookie Clicker,
mais développé avec Godot (un moteur de jeu que j’apprécie particulièrement),
et exporté en HTML.  
Comme le titre le suggérait, la solution consistait à fouiller dans les cookies du navigateur
(ces données stockées localement par un site) pour modifier la valeur de la monnaie virtuelle du jeu.  
Une fois la ressource gonflée artificiellement, le mot de passe apparaissait.
</p>
<bp>Cycle CPU</bp>
<p>
Un troisième challenge demandait de récupérer depuis un site une série de « tâches »,
similaires à des processus informatiques,
puis de les traiter en Python en recréant un système simplifié de gestion CPU,
basé sur l’algorithme du SJF (Shortest Job First).  
L’idée était de prioriser l’exécution des tâches les plus courtes
et d’en déduire le flag une fois l’ordonnancement correctement reconstitué.
</p>
<space>
<hr>
<space>
<p>
Merci d’avoir lu, et j’espère avoir motivé votre interet pour les concours de cybersécurité.
Personnelement j'en ait retenu de très bon souvenirs.</p>